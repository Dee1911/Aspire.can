'use server';
/**
 * @fileOverview An AI agent for improving essay content based on the Story Builder narrative.
 *
 * - improveEssay - A function that generates improved, personalized essay content.
 * - ImproveEssayInput - The input type for the improveEssay function.
 * - ImproveEssayOutput - The return type for the improveEssay function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const ImproveEssayInputSchema = z.object({
  essayPrompt: z.string().optional().describe('The essay prompt the user is responding to.'),
  essayDraft: z.string().describe('The current draft of the essay.'),
  storyBuilderNarrative: z.string().describe('The narrative composed in the Story Builder, including ECs, achievements, grades, struggles, skills, and personal story.'),
});
export type ImproveEssayInput = z.infer<typeof ImproveEssayInputSchema>;

const ImproveEssayOutputSchema = z.object({
  improvedEssay: z.string().describe('The improved and personalized essay content generated by the AI.'),
});
export type ImproveEssayOutput = z.infer<typeof ImproveEssayOutputSchema>;

export async function improveEssay(input: ImproveEssayInput): Promise<ImproveEssayOutput> {
  return improveEssayFlow(input);
}

const prompt = ai.definePrompt({
  name: 'improveEssayPrompt',
  input: {schema: ImproveEssayInputSchema},
  output: {schema: ImproveEssayOutputSchema},
  prompt: `You are an AI essay writing assistant. You will be provided with an essay draft, an optional essay prompt, and a narrative from the Story Builder. Your task is to improve the essay draft, making it more compelling and personalized based on the information in the narrative, while ensuring it directly answers the prompt if provided. Pay close attention to the student's ECs, achievements, grades, struggles, skills, and personal story to create an improved essay.

Essay Prompt:
{{#if essayPrompt}}
{{{essayPrompt}}}
{{else}}
None provided.
{{/if}}

Essay Draft: {{{essayDraft}}}

Story Builder Narrative: {{{storyBuilderNarrative}}}`,
});

const improveEssayFlow = ai.defineFlow(
  {
    name: 'improveEssayFlow',
    inputSchema: ImproveEssayInputSchema,
    outputSchema: ImproveEssayOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
